/* SQL (Structured Query Langauge)
: 구조화된 청 언어
: Database에서 필요한 기능을 실행시키기 위한 명령어 모음
: 형태는 간단한 프로그래밍 명령어와 유사함
-- 이랑 /* 이랑 같은 효과 
 */
use testdb; -- use 명령어는 database를 선택해한다는 뜻, 처음 한번 지정하면 계속 사용됨. 앞으로 testdb를 사용하겠다는 뜻
select * from 고객; -- 고객테이블의 모든 데이터 요청 . *: all 이라는 뜻

select 고객번호, 담당자명, 고객회사명, 마일리지
 from 고객;  -- 특정, 컬럼명을 명시하여 요청. 컬럼명이 정확해야지 고객 테이블에서 원하는 정보를 불러 올 수 있다.

select 고객번호, 담당자명, 고객회사명, 마일리지 as 포인트, -- as 는 이름을 바꾸는게 아니라 별명을 지어주는것. ex) 마일리지 정보를 보여주는데 이름을 포인트로 보이게 해주어라 라는 뜻
 마일리지 * 1.1 as "10% 인상된 마일리지"
 from 고객; 
-- as 는 별명. 인용부호("")는 별명에 특수문자(%)가 있을 경우 사용. [헷갈리는 부분이 있을 것같은 경우 사용하지만 특수문자는 필수로 사용]
-- 테이블내의 컬럼이외에 새로운 컬럼을 보여줄 수 있다.(실제 저장안됨!!) [데이터 베이스에 저장은 안됨. 새로운 보여주기식 컬럼을 만들수도 있다는 예시, 보고용도 ex)상사가 마일리지10% 인상된 것을 보여달라하면 변형된 모습을 만들고 엑셀 또는 객체로 저장해서 상사나 클라이언트한테 보내줌]


select 고객번호, 담당자명, 마일리지 from 고객
where 마일리지 >= 100000; -- 10만 마일리지 이상인 사람만 뽑아서 보여줘
-- 원하는 데이터를 필터링하여 가져오고 싶을때 where를 사용함, 워어절 이라고 부름
-- 순서가 중요. select from where 순서대로 사용함. 순서 외우기!!

select 고객번호, 담당자명, 도시, 마일리지 from 고객
where 도시 = '서울특별시' -- 인용부호 ('',"")을 사용안하면 에러가 나온다. '' 이 기본이고 ""데이터 안에서 대소문자가 구분되어야 하는 경우 사용
order by 마일리지 desc; 
-- 역시 키워드 사용 순서가 중요함. der by가 제일 뒤
-- der by는 디폴트가 오름차순이므로 내림차순은 desc를 사용해야함

select 고객번호, 담당자명, 도시, 마일리지 from 고객
where 도시 = '서울특별시'
order by 마일리지 desc 
limit 10; -- limit은 읽어오는 데이터의 갯수를 제한함. 상위 10명의 데이터를 뽑음

select 고객번호, 담당자명, 도시, 마일리지 from 고객
where 도시 = '서울특별시'
order by 마일리지 desc 
limit 10,10;
/* 내림차순으므로 상위 10명을 제외하고 그 이후 10명의 데이터를 읽는 방법임. 일종의 페이지 개념.
*/

-- 고객들이 위치한 도시 정보만 보고 싶은 경우
select 도시 from 고객;
select distinct  도시 from 고객;  -- distinct(별개의)는 중복제거



